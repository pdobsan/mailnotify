name: Build

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]
    # Pattern matched against refs/tags
    tags:
      - '*' # Push events to every tag not containing /

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        ghc: ['9.2.3']
        cabal: [latest]
        os: [ubuntu-latest]
    name: Haskell GHC ${{ matrix.ghc }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Haskell
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Cache
        uses: actions/cache@v3
        env:
          cache-name: cache-cabal
        with:
          path: ~/.cabal
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: cabal build all --only-dependencies

      - name: Build
        run: |
          export PATH=~/.cabal/bin:$PATH
          cabal build all
          cabal install --install-method=copy --overwrite-policy=always --enable-executable-stripping
          mailnotify --version
          VERSION=$(grep '^version:' mailnotify.cabal | awk '{print $2}')
          EXE_NAME=mailnotify-$VERSION-${{ runner.os }}
          cp ~/.cabal/bin/mailnotify $EXE_NAME
          sha256sum $EXE_NAME > $EXE_NAME.sha256
        #sed -e "s/^pkgver=.*$/pkgver=$VERSION/" aur/PKGBUILD >PKGBUILD
          echo "package_version=$VERSION" >> $GITHUB_ENV
          ls -l

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: Release.md
          files: mailnotify-*

      - name: Release AUR package
        uses: KSXGitHub/github-actions-deploy-aur@v2.3.0
        if: startsWith(github.ref, 'refs/tags/')
        with:
          pkgname: mailnotify-bin
          pkgbuild: PKGBUILD
          assets: |
            aur/.INSTALL
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: release mailnotify-bin ${{ env.package_version }}

